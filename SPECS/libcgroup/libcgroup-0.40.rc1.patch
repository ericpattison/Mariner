diff -ru libcgroup-2.0.1-orig/src/api.c libcgroup-2.0.1/src/api.c
--- libcgroup-2.0.1-orig/src/api.c	2022-03-10 09:01:07.000000000 -0800
+++ libcgroup-2.0.1/src/api.c	2022-03-14 17:03:14.564596027 -0700
@@ -170,6 +170,10 @@
 	return ret;
 }
 
+int cg_chmod_file(FTS *fts, FTSENT *ent, mode_t dir_mode,
+	int dirm_change, mode_t file_mode, int filem_change,
+	int owner_is_umask);
+
 /*
  * TODO: Need to decide a better place to put this function.
  */
@@ -177,7 +181,9 @@
 {
 	int ret = 0;
 	FTS *fts;
-
+	/* mode 664 */
+	mode_t mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH;
+ 
 	cgroup_dbg("chown: path is %s\n", *path);
 	fts = fts_open(path, FTS_PHYSICAL | FTS_NOCHDIR |
 				FTS_NOSTAT, NULL);
@@ -194,6 +200,7 @@
 			cgroup_warn("Warning: fts_read failed\n");
 			break;
 		}
+		cg_chmod_file(fts, ent, mode, 0, mode, 1, 1);
 		ret = cg_chown_file(fts, ent, owner, group);
 	}
 	fts_close(fts);
@@ -3060,29 +3067,29 @@
 					const char *file, char **value)
 {
 	char path[FILENAME_MAX];
-	FILE *ctrl_file = NULL;
-	int ret;
+	FILE *ctrl_file = -1;
+	ssize_t ret;
 
 	if (!cg_build_path_locked(cgroup, path, subsys))
 		return ECGFAIL;
 
 	strncat(path, file, sizeof(path) - strlen(path));
-	ctrl_file = fopen(path, "re");
-	if (!ctrl_file)
+	ctrl_file = open(path, O_RDONLY | O_CLOEXEC);
+	if (ctrl_file < 0)
 		return ECGROUPVALUENOTEXIST;
 
 	*value = calloc(CG_CONTROL_VALUE_MAX, 1);
 	if (!*value) {
-		fclose(ctrl_file);
+		close(ctrl_file);
 		last_errno = errno;
 		return ECGOTHER;
 	}
 
 	/*
-	 * using %as crashes when we try to read from files like
+	 * using %as or fread crashes when we try to read from files like
 	 * memory.stat
 	 */
-	ret = fread(*value, 1, CG_CONTROL_VALUE_MAX-1, ctrl_file);
+	ret = read(ctrl_file, *value, CG_VALUE_MAX-1);
 	if (ret < 0) {
 		free(*value);
 		*value = NULL;
@@ -3092,7 +3099,7 @@
 			(*value)[ret-1] = '\0';
 	}
 
-	fclose(ctrl_file);
+	close(ctrl_file);
 
 	return 0;
 }
@@ -4052,10 +4059,10 @@
 						available, "%d", pid);
 					break;
 				case 'p':
-					if(procname) {
+					if(procname && strlen(basename(procname))) {
 						written = snprintf(newdest + j,
 							available, "%s",
-							procname);
+							basename(procname));
 					} else {
 						written = snprintf(newdest + j,
 							available, "%d", pid);
diff -ru libcgroup-2.0.1-orig/src/config.c libcgroup-2.0.1/src/config.c
--- libcgroup-2.0.1-orig/src/config.c	2022-03-10 09:01:07.000000000 -0800
+++ libcgroup-2.0.1/src/config.c	2022-03-14 16:53:07.124090675 -0700
@@ -326,7 +326,7 @@
 	long val = atoi(value);
 	char buffer[CGROUP_BUFFER_LEN];
 	struct cgroup *config_cgroup;
-	int table_index;
+	int table_index, ret;
 
 	switch (flag) {
 	case CGROUP:
@@ -370,10 +370,10 @@
 			if (!group)
 				goto group_task_error;
 
-			getgrnam_r(value, group, buffer,
+			ret = getgrnam_r(value, group, buffer,
 					CGROUP_BUFFER_LEN, &group_buffer);
 
-			if (group_buffer == NULL) {
+			if (ret != 0 || group_buffer == NULL) {
 				free(group);
 				goto group_task_error;
 			}
@@ -439,7 +439,7 @@
 	struct cgroup *config_cgroup;
 	long val = atoi(value);
 	char buffer[CGROUP_BUFFER_LEN];
-	int table_index;
+	int table_index, ret;
 
 	switch (flag) {
 	case CGROUP:
@@ -482,10 +482,10 @@
 			if (!group)
 				goto admin_error;
 
-			getgrnam_r(value, group, buffer,
+			ret = getgrnam_r(value, group, buffer,
 					CGROUP_BUFFER_LEN, &group_buffer);
 
-			if (group_buffer == NULL) {
+			if (ret != 0 || group_buffer == NULL) {
 				free(group);
 				goto admin_error;
 			}
diff -ru libcgroup-2.0.1-orig/src/daemon/cgrulesengd.c libcgroup-2.0.1/src/daemon/cgrulesengd.c
--- libcgroup-2.0.1-orig/src/daemon/cgrulesengd.c	2022-03-10 09:01:07.000000000 -0800
+++ libcgroup-2.0.1/src/daemon/cgrulesengd.c	2022-03-14 16:54:30.836168106 -0700
@@ -654,7 +654,7 @@
 
 static int cgre_create_netlink_socket_process_msg(void)
 {
-	int sk_nl = 0, sk_unix = 0, sk_max;
+	int sk_nl = -1, sk_unix = -1, sk_max;
 	struct sockaddr_nl my_nla;
 	char buff[BUFF_SIZE];
 	int rc = -1;
@@ -792,9 +792,9 @@
 	}
 
 close_and_exit:
-	if (sk_nl >= 0)
+	if (sk_nl > -1)
 		close(sk_nl);
-	if (sk_unix >= 0)
+	if (sk_unix > -1)
 		close(sk_unix);
 	return rc;
 }
diff -ru libcgroup-2.0.1-orig/src/tools/lscgroup.c libcgroup-2.0.1/src/tools/lscgroup.c
--- libcgroup-2.0.1-orig/src/tools/lscgroup.c	2022-03-10 09:01:07.000000000 -0800
+++ libcgroup-2.0.1/src/tools/lscgroup.c	2022-03-14 16:56:31.012273769 -0700
@@ -96,12 +96,12 @@
 	if (ret != 0)
 		return ret;
 
-	strncpy(cgroup_dir_path, info.full_path, FILENAME_MAX);
+	strncpy(cgroup_dir_path, info.full_path, FILENAME_MAX - 1);
 	cgroup_dir_path[sizeof(cgroup_dir_path) - 1] = '\0';
 	/* remove problematic  '/' characters from cgroup directory path*/
 	trim_filepath(cgroup_dir_path);
 
-	strncpy(input_dir_path, input_path, FILENAME_MAX);
+	strncpy(input_dir_path, input_path, FILENAME_MAX - 1);
 	input_dir_path[sizeof(input_dir_path) - 1] = '\0';
 
 	/* remove problematic  '/' characters from input directory path*/
