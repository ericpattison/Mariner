diff -rupN geos-3.11.1/include/geos/algorithm/CGAlgorithmsDD.h geos-3.11.1-new/include/geos/algorithm/CGAlgorithmsDD.h
--- geos-3.11.1/include/geos/algorithm/CGAlgorithmsDD.h	2022-11-13 20:24:40.000000000 +0100
+++ geos-3.11.1-new/include/geos/algorithm/CGAlgorithmsDD.h	2022-11-15 08:03:18.909027043 +0100
@@ -172,7 +172,7 @@ public:
      *
      * This method uses @ref geos::math::DD extended-precision arithmetic to provide more accurate
      * results than [circumcentre(Coordinate, Coordinate, Coordinate)]
-     * (@ref geos::geom::Triangle::circumcentre(const Coordinate& p0, const Coordinate& p1, const Coordinate& p2)).
+     * (geos::geom::Triangle::circumcentre(const Coordinate& p0, const Coordinate& p1, const Coordinate& p2)).
      *
      * @param a
      *          a vertex of the triangle
diff -rupN geos-3.11.1/include/geos/index/SpatialIndex.h.rej geos-3.11.1-new/include/geos/index/SpatialIndex.h.rej
--- geos-3.11.1/include/geos/index/SpatialIndex.h.rej	1970-01-01 01:00:00.000000000 +0100
+++ geos-3.11.1-new/include/geos/index/SpatialIndex.h.rej	2022-11-14 19:32:59.422831322 +0100
@@ -0,0 +1,10 @@
+--- include/geos/index/SpatialIndex.h	2022-07-01 18:42:19.000000000 +0200
++++ include/geos/index/SpatialIndex.h	2022-07-02 11:07:09.740083703 +0200
+@@ -70,7 +70,6 @@ public:
+      * intersect the query envelope.
+      *
+      * @param searchEnv the envelope to query for
+-     * @return a list of the items found by the query in a newly allocated vector
+      */
+     //virtual std::vector<void*>* query(const geom::Envelope *searchEnv)=0;
+     virtual void query(const geom::Envelope* searchEnv, std::vector<void*>&) = 0;
diff -rupN geos-3.11.1/include/geos/index/VertexSequencePackedRtree.h.rej geos-3.11.1-new/include/geos/index/VertexSequencePackedRtree.h.rej
--- geos-3.11.1/include/geos/index/VertexSequencePackedRtree.h.rej	1970-01-01 01:00:00.000000000 +0100
+++ geos-3.11.1-new/include/geos/index/VertexSequencePackedRtree.h.rej	2022-11-14 19:33:00.510831347 +0100
@@ -0,0 +1,10 @@
+--- include/geos/index/VertexSequencePackedRtree.h	2022-07-01 18:42:19.000000000 +0200
++++ include/geos/index/VertexSequencePackedRtree.h	2022-07-02 11:07:44.759084486 +0200
+@@ -136,7 +136,6 @@ public:
+     *
+     * @param queryEnv the query extent
+     * @param result vector to fill with results
+-    * @return
+     */
+     void query(const Envelope& queryEnv, std::vector<std::size_t>& result) const;
+ 
diff -rupN geos-3.11.1/include/geos/noding/SegmentNodeList.h.rej geos-3.11.1-new/include/geos/noding/SegmentNodeList.h.rej
--- geos-3.11.1/include/geos/noding/SegmentNodeList.h.rej	1970-01-01 01:00:00.000000000 +0100
+++ geos-3.11.1-new/include/geos/noding/SegmentNodeList.h.rej	2022-11-14 19:33:01.494831369 +0100
@@ -0,0 +1,12 @@
+--- include/geos/noding/SegmentNodeList.h	2022-07-02 11:06:21.869082632 +0200
++++ include/geos/noding/SegmentNodeList.h	2022-07-02 00:22:57.506176063 +0200
+@@ -155,9 +155,6 @@ public:
+      * Adds an intersection into the list, if it isn't already there.
+      * The input segmentIndex is expected to be normalized.
+      *
+-     * @return the SegmentIntersection found or added. It will be
+-     *	   destroyed at SegmentNodeList destruction time.
+-     *
+      * @param intPt the intersection Coordinate, will be copied
+      * @param segmentIndex
+      */
diff -rupN geos-3.11.1/include/geos/operation/buffer/OffsetCurve.h.rej geos-3.11.1-new/include/geos/operation/buffer/OffsetCurve.h.rej
--- geos-3.11.1/include/geos/operation/buffer/OffsetCurve.h.rej	1970-01-01 01:00:00.000000000 +0100
+++ geos-3.11.1-new/include/geos/operation/buffer/OffsetCurve.h.rej	2022-11-14 19:33:02.197831384 +0100
@@ -0,0 +1,10 @@
+--- include/geos/operation/buffer/OffsetCurve.h	2022-07-01 18:42:19.000000000 +0200
++++ include/geos/operation/buffer/OffsetCurve.h	2022-07-02 11:09:25.767086746 +0200
+@@ -252,7 +252,6 @@ public:
+     * @param dist the offset distance
+     * @param bufParams the buffer parameters to use
+     * @param lineList the vector to populate with the return value
+-    * @return the raw offset line
+     */
+     static void rawOffset(const LineString& geom, double dist, BufferParameters& bufParams, std::vector<CoordinateSequence*>& lineList);
+     static void rawOffset(const LineString& geom, double dist, std::vector<CoordinateSequence*>& lineList);
diff -rupN geos-3.11.1/include/geos/operation/distance/IndexedFacetDistance.h geos-3.11.1-new/include/geos/operation/distance/IndexedFacetDistance.h
--- geos-3.11.1/include/geos/operation/distance/IndexedFacetDistance.h	2022-11-13 20:24:40.000000000 +0100
+++ geos-3.11.1-new/include/geos/operation/distance/IndexedFacetDistance.h	2022-11-15 08:03:12.656026903 +0100
@@ -38,7 +38,7 @@ namespace distance {
 ///   an repeated query situation.
 ///
 /// Using this technique is usually much more performant than using the
-/// brute-force \ref geom::Geometry::distance(const Geometry* g) const when one
+/// brute-force geom::Geometry::distance(const Geometry* g) const when one
 /// or both input geometries are large, or when evaluating many distance
 /// computations against a single geometry.
 ///
diff -rupN geos-3.11.1/include/geos/operation/overlayng/OverlayNG.h geos-3.11.1-new/include/geos/operation/overlayng/OverlayNG.h
--- geos-3.11.1/include/geos/operation/overlayng/OverlayNG.h	2022-11-13 20:24:40.000000000 +0100
+++ geos-3.11.1-new/include/geos/operation/overlayng/OverlayNG.h	2022-11-15 08:05:23.491029830 +0100
@@ -271,7 +271,7 @@ public:
     * the result of overlaying the geometries using
     * a given overlay operation.
     *
-    * The method handles arguments of {@link Location#NONE} correctly
+    * The method handles arguments of {@link Location} correctly
     */
     static bool isResultOfOpPoint(const OverlayLabel* label, int opCode);
 
@@ -284,7 +284,7 @@ public:
     * computed during the overlay process should be
     * included in the result geometry.
     *
-    * The method handles arguments of {@link Location#NONE} correctly.
+    * The method handles arguments of {@link Location} correctly.
     */
     static bool isResultOfOp(int overlayOpCode, Location loc0, Location loc1);
 
diff -rupN geos-3.11.1/include/geos/operation/union/UnaryUnionOp.h geos-3.11.1-new/include/geos/operation/union/UnaryUnionOp.h
--- geos-3.11.1/include/geos/operation/union/UnaryUnionOp.h	2022-11-13 20:24:40.000000000 +0100
+++ geos-3.11.1-new/include/geos/operation/union/UnaryUnionOp.h	2022-11-15 08:04:05.928028095 +0100
@@ -71,7 +71,7 @@ namespace geounion {  // geos::operation
  *   or portions of line segments will be reduced to a single line segment
  *   in the output.
  *   This is consistent with the semantics of the
- *   [Geometry::Union(Geometry* )](@ref geom::Geometry::Union(const Geometry* other) const)
+ *   geom::Geometry::Union(const Geometry* other) const
  *   operation. If **merged** linework is required, the
  *   [LineMerger](@ref operation::linemerge::LineMerger) class
  *   can be used.
diff -rupN geos-3.11.1/include/geos/precision/CommonBitsRemover.h.rej geos-3.11.1-new/include/geos/precision/CommonBitsRemover.h.rej
--- geos-3.11.1/include/geos/precision/CommonBitsRemover.h.rej	1970-01-01 01:00:00.000000000 +0100
+++ geos-3.11.1-new/include/geos/precision/CommonBitsRemover.h.rej	2022-11-14 19:33:03.029831403 +0100
@@ -0,0 +1,10 @@
+--- include/geos/precision/CommonBitsRemover.h	2022-07-01 18:42:19.000000000 +0200
++++ include/geos/precision/CommonBitsRemover.h	2022-07-02 11:59:35.455154073 +0200
+@@ -74,7 +74,6 @@ public:
+      *
+      * @param geom the Geometry from which to remove the common
+      *             coordinate bits
+-     * @return the shifted Geometry
+      */
+     void removeCommonBits(geom::Geometry* geom);
+ 
diff -rupN geos-3.11.1/include/geos/triangulate/polygon/PolygonEarClipper.h.rej geos-3.11.1-new/include/geos/triangulate/polygon/PolygonEarClipper.h.rej
--- geos-3.11.1/include/geos/triangulate/polygon/PolygonEarClipper.h.rej	1970-01-01 01:00:00.000000000 +0100
+++ geos-3.11.1-new/include/geos/triangulate/polygon/PolygonEarClipper.h.rej	2022-11-14 19:33:04.069831426 +0100
@@ -0,0 +1,10 @@
+--- include/geos/triangulate/polygon/PolygonEarClipper.h	2022-07-02 11:06:21.870082632 +0200
++++ include/geos/triangulate/polygon/PolygonEarClipper.h	2022-07-02 00:22:57.507176063 +0200
+@@ -184,7 +184,6 @@ public:
+     *
+     * @param polyShell the vertices of the polygon
+     * @param triListResult vector to fill in with the resultant Tri s
+-    * @return a list of the Tris
+     */
+     static void triangulate(std::vector<Coordinate>& polyShell, TriList<Tri>& triListResult);
+ 
