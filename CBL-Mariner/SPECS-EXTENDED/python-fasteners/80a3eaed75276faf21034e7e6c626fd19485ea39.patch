From 80a3eaed75276faf21034e7e6c626fd19485ea39 Mon Sep 17 00:00:00 2001
From: Paulius Sarka <paulius.sarka@gmail.com>
Date: Fri, 16 Sep 2022 17:06:59 +0200
Subject: [PATCH] Move eventlet tests to main folder and to child process

---
 .github/workflows/run_tests.yml            |  1 -
 {tests_eventlet => tests}/test_eventlet.py | 35 +++++++++++++++++-----
 tests_eventlet/__init__.py                 |  0
 3 files changed, 28 insertions(+), 8 deletions(-)
 rename {tests_eventlet => tests}/test_eventlet.py (54%)
 delete mode 100644 tests_eventlet/__init__.py

diff --git a/.github/workflows/run_tests.yml b/.github/workflows/run_tests.yml
index 85766b0..d4c5d11 100644
--- a/.github/workflows/run_tests.yml
+++ b/.github/workflows/run_tests.yml
@@ -32,4 +32,3 @@ jobs:
     - name: Test with pytest
       run: |
         pytest tests/
-        pytest tests_eventlet/
diff --git a/tests_eventlet/test_eventlet.py b/tests/test_eventlet.py
similarity index 54%
rename from tests_eventlet/test_eventlet.py
rename to tests/test_eventlet.py
index 8d0f1f7..cdcc8e8 100644
--- a/tests_eventlet/test_eventlet.py
+++ b/tests/test_eventlet.py
@@ -1,12 +1,17 @@
-import eventlet
+"""
+These tests need to run in child processes, otherwise eventlet monkey_patch
+conflicts with multiprocessing and other tests fail.
+"""
+import concurrent.futures
+from multiprocessing import get_context
 
-eventlet.monkey_patch(thread=True)
 
-from fasteners import ReaderWriterLock
-
-
-def test_eventlet_spawn_n_bug():
+def _test_eventlet_spawn_n_bug():
     """Both threads run at the same time thru the lock"""
+    import eventlet
+    eventlet.monkey_patch()
+    from fasteners import ReaderWriterLock
+
     STARTED = eventlet.event.Event()
     FINISHED = eventlet.event.Event()
     lock = ReaderWriterLock()
@@ -22,8 +27,12 @@ def other():
         assert FINISHED.wait(1) == 'finished'
 
 
-def test_eventlet_spawn_n_bugfix():
+def _test_eventlet_spawn_n_bugfix():
     """Threads wait for each other as they should"""
+    import eventlet
+    eventlet.monkey_patch()
+    from fasteners import ReaderWriterLock
+
     STARTED = eventlet.event.Event()
     FINISHED = eventlet.event.Event()
     lock = ReaderWriterLock(current_thread_functor=eventlet.getcurrent)
@@ -39,3 +48,15 @@ def other():
         assert FINISHED.wait(1) is None
 
     assert FINISHED.wait(1) == 'finished'
+
+
+def test_eventlet_spawn_n_bug():
+    with concurrent.futures.ProcessPoolExecutor(mp_context=get_context('spawn')) as executor:
+        f = executor.submit(_test_eventlet_spawn_n_bug)
+        f.result()
+
+
+def test_eventlet_spawn_n_bugfix():
+    with concurrent.futures.ProcessPoolExecutor(mp_context=get_context('spawn')) as executor:
+        f = executor.submit(_test_eventlet_spawn_n_bugfix)
+        f.result()
diff --git a/tests_eventlet/__init__.py b/tests_eventlet/__init__.py
deleted file mode 100644
index e69de29..0000000
